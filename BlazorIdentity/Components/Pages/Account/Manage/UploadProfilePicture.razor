@using BlazorIdentity.Data
@using Microsoft.AspNetCore.Identity
@rendermode RenderMode.InteractiveServer
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager
@inject UserAccessor UserAccessor;

<div class="form-floating">
    <label asp-for="User.ProfilePicture" style="width: 100%;"></label>
    @if (_user != null && _user.ProfilePicture != null && _user.ProfilePicture.Length > 0)
    {
        <img id="profilePicture" style="width:350px;height:350px; object-fit:cover" src="data:image/*;base64,@(Convert.ToBase64String(_user.ProfilePicture))">
    }
    else
    {
        <InputFile OnChange="LoadFiles" />
    }
    <span asp-validation-for="User.ProfilePicture" class="text-danger"></span>
</div>

@code {
    private ApplicationUser _user = default!;

    protected override async Task OnInitializedAsync()
    {
        _user = await UserAccessor.GetRequiredUserAsync();
    }

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        MemoryStream ms = new MemoryStream();
        await e.File.OpenReadStream().CopyToAsync(ms);
        var bytes = ms.ToArray();

        _user.ProfilePicture = bytes;
        await UserManager.UpdateAsync(_user);
    }
}